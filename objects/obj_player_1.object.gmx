<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player_1</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Writing initial variables
car_speed = 5.50;
aim_speed = 5.50;
state = 0.5;
original_direction = image_angle;
turn_speed = 1.5;
compass = image_angle;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Moiving code
//Updating state
//Normal = 0
//Accelerate = 1
//Turn right = 2
//Turn left = 3
//Rest = 5
if place_meeting(x, y, obj_turn_right) {
    state = 2;
}

if place_meeting(x, y, obj_turn_left) {
    state = 3;
}



//State Machine
//Starting the race
if state = 0.5 {
    motion_set((image_angle + 90), car_speed)
    state = 0
}
 //Normal
 if state = 0 {
    motion_set(image_angle + 90, car_speed);
}
//Turning right
if state = 2 {
    if (original_direction = image_angle + 90) {
        motion_set((image_angle + 90), car_speed);
        original_angle = image_angle;
        state = 5;
    }
    else {
        if (image_angle - turn_speed &lt; original_direction + 90) {
            image_angle = image_angle - turn_speed;
            motion_set((image_angle + 90), car_speed);   
        }
    }
}

//Turning left
if state = 3 {
    if (original_direction = image_angle - 90) {
        motion_set((image_angle + 90), car_speed);
        original_angle = image_angle;
        state = 5;
    }
    else {
        image_angle = image_angle + turn_speed;
        motion_set((image_angle + 90), car_speed);
    }
}

//Reseting original angle
if state = 5 {
    original_direction = image_angle;
    state = 0;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Quick-time events
//Accelerate
if (position_meeting(x, y, obj_accelerate)) {
    if (keyboard_check_pressed(vk_space)) {
        car_speed = car_speed + 0.05;
    }
}

//Decelerate
if (position_meeting(x, y, obj_decelerate)) {
    if aim_speed = car_speed {
        
    }
    else {
        car_speed = car_speed - (car_speed - aim_speed);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
